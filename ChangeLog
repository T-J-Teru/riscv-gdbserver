2017-06-09  Jeremy Bennett  <jeremy.bennett@embecosm.com>

	WIP progress to integrated existing model into the GDB server
	target abstraction.

	* server/Cpu.cpp: Moved to targets/ri5cy/Ri5cy.cpp.
	* server/Cpu.h: Moved to targets/ri5cy/Ri5cy.h.
	* server/GdbServer.cpp: Use ITarget.h, not Cpu.h, add using
	statements from chrono components. Use timeout, not clock_timeout
	throughout and make signals of scoped enumeration type TargetSignal.
	(GdbServer::GdbServer): Change type of cpu to ITarget, and
	initialize timeout as a duration.
	(GdbServer::rspClientRequest): Replace code for 'c'.
	(operator<<): Created.
	* server/GdbServer.h: Relace ctime by chrono header
	(class GdbServer): Make cpu of class ITarget, make signals a
	scoped enumeration, make timeout a duration.
	* server/Makefile.am: Remove Cpu.c and Cpu.h from SOURCES, add
	libtargets as a library and all the target include directories.
	* server/Makefile.in: Regnerated.
	* server/RspConnection.cpp:
	(RspConnection::putRspChar, RspConnection::getRspChar): Rewrite to
	use raw versions of functions and test for break.
	(RspConnection::haveBreak, RspConnection::putRspCharRaw)
	(RspConnectionLinux::getRspCharRaw): Created.
	* server/RspConnection.h (class RspConnection): Add new methods
	and member variable sot support them.
	* server/main.cpp: Replace Cpu.h by all the target headers.
	* targets/ri5cy/Ri5cy.cpp: Moved to server/Cpu.cpp.
	* targets/ri5cy/Ri5cy.h: Moved to server/Cpu.h.

2017-06-08  Jeremy Bennett  <jeremy.bennett@embecosm.com>

	Restructure configure.ac to add a set of target specific options
	to locate verilator models and headers. We now have
	--with-verilator-headers
	--with-picorv32-modeldir
	--with-picorv32-topmodule
	--with-ri5cy-modeldir
	--with-ri5cy-topmodule

	For each new model, we add a new set of options.

	* Makefile.in: Regenerated.
	* config.h.in: Regenerated.
	* configure: Regenerated.
	* configure.ac: Remove --enable-32-bit, add --with-verilator-headers
	--with-picorv32-modeldir, --with-picorv32-topmodule,
	--with-ri5cy-modeldir, --with-ri5cy-topmodule, test for Verilator
	headers.
	* server/Makefile.in: Regenerated.
	* targets/Makefile.in: Regenerated.
	* targets/common/Makefile.in: Regenerated.
	* targets/picorv32/Makefile.in: Regenerated.
	* targets/ri5cy/Makefile.in: Regenerated.

2017-06-07  Jeremy Bennett  <jeremy.bennett@embecosm.com>

	Infrastructure for an abstracted target interface class, ITarget.
	All targets should implement the interface class ITarget, declared
	in the "targets" subdirectory.  Each target should be in its own
	subdirectory of the "targets" directory.  There is also a "common"
	subdirectory for code common to all targets.

	The result is the libtargets library, which can be linked into the
	server code, which can instantiate the target of choice.  The
	current framework has placeholders for the PicoRV32 and RI5CY
	verilator models.

	* Makefile.am: Add new subdirectories and have automake include
	the m4 directory.
	* Makefile.in: Regenerated.
	* aclocal.m4: Regenerated for libtool.
	* compile: Generated.
	* config.guess: Generated.
	* config.h.in: Regenerated.
	* config.sub: Generated.
	* configure: Regenerated.
	* configure.ac: Now use libtool and for now comment out the
	verilator directory.
	* ltmain.sh: Generated.
	* m4/libtool.m4: Generated.
	* m4/ltoptions.m4: Generated.
	* m4/ltsugar.m4: Generated.
	* m4/ltversion.m4: Generated.
	* m4/lt~obsolete.m4: Generated.
	* server/Makefile.in: Regenerated.
	* targets/ITarget.cpp: Created
	* targets/ITarget.h: Created
	* targets/Makefile.am: Created
	* targets/Makefile.in: Generated.
	* targets/common/Makefile.am: Created
	* targets/common/Makefile.in: Generated.
	* targets/common/SyscallInfo.cpp: Created
	* targets/common/SyscallInfo.h: Created
	* targets/picorv32/Makefile.am: Created
	* targets/picorv32/Makefile.in: Generated.
	* targets/ri5cy/Makefile.am: Created
	* targets/ri5cy/Makefile.in: Generated.

2017-06-07  Jeremy Bennett  <jeremy.bennett@embecosm.com>

	Add in the autotools generated files.  I know that there is a
	debate about whether to do this.  But we'll follow the GNU tool
	chain practice of doing so.  It means you can clone and build out
	of the box.

	* .gitignore: Created.
	* COPYING: Generated.
	* INSTALL: Generated.
	* Makefile.in: Generated.
	* aclocal.m4: Generated.
	* config.h.in: Generated.
	* configure: Generated.
	* depcomp: Generated.
	* install-sh: Generated.
	* missing: Generated.
	* server/Makefile.in: Generated.


2017-05-25  Ian Bolton  <ian.bolton@embecosm.com>

	* server/GdbServer.cpp: Handle monitor reset, and make vKill
	behave in the same way (delete cpu and construct another).

2017-05-21  Ian Bolton  <ian.bolton@embecosm.com>

	* server/GdbServer.cpp: Handle vKill packet, so that server
	is terminated when GDB session quits.
	* server/RspConnection.cpp: Don't output to stdout unless
	GDBSERVER_DEBUG is defined.

2017-05-20  Ian Bolton  <ian.bolton@embecosm.com>

	* README.md: Mention building outside source tree and also
	expand example GDB session to cover breakpoints.

2017-05-20  Ian Bolton  <ian.bolton@embecosm.com>

	* README.md: Update status to mention breakpoints working.
	* server/Cpu.cpp: Add clearTrapAndRestartInstruction to properly
	continue after a breakpoint has caused a trap.
	* server/Cpu.h: New clearTrapAndRestartInstruction function.
	* server/GdbServer.cpp: Make single instruction stepping call
	clearTrapAndRestartInstruction before doing the step.

2017-05-20  Ian Bolton  <ian.bolton@embecosm.com>

	* configure.ac: Define and use VTESTBENCH variable.
	* README.md: Updated build instructions.
	* server/Makefile.am: No longer hardcode object locations.

2017-05-16  Ian Bolton  <ian.bolton@embecosm.com>

	* server/GdbServer.cpp: Debug only shown when GDBSERVER_DEBUG defined.

2017-05-16  Ian Bolton  <ian.bolton@embecosm.com>

	* README.md: Updated the GDB example session section.
	* server/Cpu.cpp: Bring step function in line with what GDB expects, to
	execute a single instruction rather than just one clock step.
	* server/Cpu.h: Add clock_step function.

2017-05-16  Ian Bolton  <ian.bolton@embecosm.com>

	* README.md: Added example GDB session instructions.

2017-05-16  Ian Bolton  <ian.bolton@embecosm.com>

	* server/Cpu.cpp: Write PC for each step while in reset, so that it is set
	in the model once out of reset.
	* server/GdbServer.cpp: Print out when we are writing PC and then read the
	value back to confirm it was written.
	* server/main.cpp: Cycling during reset has been deferred until we attempt
	to write PC. 

2017-05-15  Ian Bolton  <ian.bolton@embecosm.com>

	* server/Cpu.cpp: Detect inReset and trap situations and return bool from step.
	* server/Cpu.h: Add inReset and haveTrap, and return bool from step.
	* server/GdbServer.cpp: Handle 32-bit breakpoint instructions correctly.
	* server/GdbServer.h: Correct BREAK_INSTR to EBREAK instruction pattern.
	* server/MpHash.cpp: Correct instructions to be 32-bits.
	* server/MpHash.h: Likewise.
	* server/main.cpp: Cycle until CPU no longer in reset. Remove redundant command line arguments.

2017-05-15  Ian Bolton  <ian.bolton@embecosm.com>

	* server/Cpu.cpp: Fix spelling mistake in comment.
	* server/Cpu.h: Likewise.
	* server/GdbServer.cpp: Likewise.
	* server/GdbServer.h: Likewise.
	* server/main.cpp: Likewise.

2017-05-15  Ian Bolton  <ian.bolton@embecosm.com>

	* server/Cpu.cpp: Call into readReg, writeReg within CPU correctly.
	* server/GdbServer.cpp: Continue should step without reporting exception.

2017-05-15  Ian Bolton  <ian.bolton@embecosm.com>

	* server/GdbServer.cpp: Corrected RISCV_PC_REGNUM to be 32.

2017-05-15  Ian Bolton  <ian.bolton@embecosm.com>

	* README.md: Add -g flag to CXXFLAGS in example configure command.
	* server/GdbServer.cpp: Respond to vMustReplyEmpty.
	* server/main.cpp: Create the Cpu object.

2017-05-13  Ian Bolton  <ian.bolton@embecosm.com>

	* README.md: Added commands required to build.

2017-05-12  Ian Bolton  <ian.bolton@embecosm.com>

	* AUTHORS: Created.
	* configure.ac: Created.
	* Makefile.am: Created.
	* NEWS: Created.
	* README: Created as symbolic link to README.md.
	* README.md: Updated with a note about lack of doc directory.
	* server/Cpu.cpp: Created.
	* server/Cpu.h: Created.
	* server/GdbServer.cpp: Created.
	* server/GdbServer.h: Created.
	* server/main.cpp: Created.
	* server/Makefile.am: Created.
	* server/MpHash.cpp: Created.
	* server/MpHash.h: Created.
	* server/RspConnection.cpp: Created.
	* server/RspConnection.h: Created.
	* server/RspPacket.cpp: Created.
	* server/RspPacket.h: Created.
	* server/TraceFlags.cpp: Created.
	* server/TraceFlags.h: Created.
	* server/Utils.cpp: Created.
	* server/Utils.h: Created.

2017-05-12  Ian Bolton  <ian.bolton@embecosm.com>

	* ChangeLog: Created.
	* README.md: Created.
